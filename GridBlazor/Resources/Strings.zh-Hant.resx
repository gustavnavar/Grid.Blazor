<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultGridEmptyText" xml:space="preserve">
    <value>沒有可顯示的項目</value>
  </data>
  <data name="FilterButtonTooltipText" xml:space="preserve">
    <value>過慮此列</value>
  </data>
  <data name="Lang" xml:space="preserve">
    <value>zh-Hant</value>
  </data>
  <data name="ApplyFilterButtonText" xml:space="preserve">
    <value>應用</value>
  </data>
  <data name="BoolFalseLabel" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="BoolTrueLabel" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="ClearFilterLabel" xml:space="preserve">
    <value>清除過濾器</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="EndsWith" xml:space="preserve">
    <value>以...結尾</value>
  </data>
  <data name="Equal" xml:space="preserve">
    <value>等於</value>
  </data>
  <data name="FilterTypeLabel" xml:space="preserve">
    <value>類型</value>
  </data>
  <data name="FilterValueLabel" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>大於</value>
  </data>
  <data name="GreaterThanOrEquals" xml:space="preserve">
    <value>大於等於</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>小於</value>
  </data>
  <data name="LessThanOrEquals" xml:space="preserve">
    <value>小於等於</value>
  </data>
  <data name="StartsWith" xml:space="preserve">
    <value>以…開頭</value>
  </data>
  <data name="SearchFor" xml:space="preserve">
    <value>搜尋 ...</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>項目</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>最大</value>
  </data>
  <data name="Min" xml:space="preserve">
    <value>最小</value>
  </data>
  <data name="Sum" xml:space="preserve">
    <value>合計</value>
  </data>
  <data name="Average" xml:space="preserve">
    <value>平均</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>與</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>或</value>
  </data>
  <data name="ExtSortingText" xml:space="preserve">
    <value>將列拖曳到此處進行列擴充排序</value>
  </data>
  <data name="GroupingText" xml:space="preserve">
    <value>將列拖放到此處進行列分組</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>增加</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>儲存</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="SelectItem" xml:space="preserve">
    <value>--- 選擇一個選項 ---</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>顯示</value>
  </data>
  <data name="ClearAllFilters" xml:space="preserve">
    <value>清除所有過濾器</value>
  </data>
  <data name="CreateItem" xml:space="preserve">
    <value>創建項目</value>
  </data>
  <data name="DeleteItem" xml:space="preserve">
    <value>刪除項目</value>
  </data>
  <data name="ReadItem" xml:space="preserve">
    <value>讀取項目</value>
  </data>
  <data name="UpdateItem" xml:space="preserve">
    <value>更新項目</value>
  </data>
  <data name="NotEqual" xml:space="preserve">
    <value>不等於</value>
  </data>
  <data name="CreateError" xml:space="preserve">
    <value>創建項目時發生錯誤</value>
  </data>
  <data name="DeleteError" xml:space="preserve">
    <value>刪除項目時發生錯誤</value>
  </data>
  <data name="UpdateError" xml:space="preserve">
    <value>更新項目時發生錯誤</value>
  </data>
  <data name="IsNotNull" xml:space="preserve">
    <value>不為空</value>
  </data>
  <data name="IsNull" xml:space="preserve">
    <value>為空</value>
  </data>
  <data name="SelectionDeleteError" xml:space="preserve">
    <value>您必須選擇要刪除的行</value>
  </data>
  <data name="SelectionReadError" xml:space="preserve">
    <value>您必須選擇要查看的行</value>
  </data>
  <data name="SelectionUpdateError" xml:space="preserve">
    <value>您必須選擇要編輯的行</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>程式碼</value>
  </data>
  <data name="Confirm Code" xml:space="preserve">
    <value>確認碼</value>
  </data>
  <data name="ConfirmCodeError" xml:space="preserve">
    <value>確認碼必須和程式碼完全相同才可以儲存這個項目</value>
  </data>
  <data name="DeleteConfirmCodeError" xml:space="preserve">
    <value>確認碼必須跟程式碼完全相同才可以刪除這個項目</value>
  </data>
  <data name="Goto" xml:space="preserve">
    <value>跳轉</value>
  </data>
  <data name="SearchFilterListInputText" xml:space="preserve">
    <value>搜尋字詞</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>無</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>選擇</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>高度</value>
  </data>
  <data name="Duplicated" xml:space="preserve">
    <value>重複</value>
  </data>
  <data name="NotDuplicated" xml:space="preserve">
    <value>不重複</value>
  </data>
  <data name="current" xml:space="preserve">
    <value>當前</value>
  </data>
  <data name="PageSizeItems" xml:space="preserve">
    <value>項目</value>
  </data>
</root>