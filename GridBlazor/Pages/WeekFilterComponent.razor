@using GridBlazor.Resources

@typeparam T

@if (Visible)
{
    <div class="dropdown dropdown-menu grid-dropdown opened" style="display:block;@(_offset > 0 ? "margin-left:-" + _offset.ToString() + "px;" : "")" @ref="dateTimeFilter" @onkeyup="FilterKeyup" @onclick:stopPropagation @onkeyup:stopPropagation>
        <div class="grid-dropdown-arrow" style="@(_offset > 0 ? "margin-left:" + _offset.ToString() + "px" : "")"></div>
        <div class="grid-dropdown-inner">
            <div class="grid-popup-widget">
                <div class="grid-filter-body">
                    @for (int i = 0; i < _filters.Count(); i++)
                    {
                        int j = i;
                        if (j == 1)
                        {
                            <div class="form-group row">
                                <div class="col-md-4 col-md-offset-4 offset-md-4">
                                    <select class="grid-filter-cond form-control" @bind="_condition">
                                        <option value="1">@Strings.And</option>
                                        <option value="2">@Strings.Or</option>
                                    </select>
                                </div>
                            </div>
                        }
                        else if (j > 1)
                        {
                            <div class="form-group row">
                                <div class="col-md-4 col-md-offset-4 offset-md-4">
                                    <select class="grid-filter-cond form-control" disabled="disabled" value="@_condition">
                                        <option value="1">@Strings.And</option>
                                        <option value="2">@Strings.Or</option>
                                    </select>
                                </div>
                            </div>
                        }
                        <div class="form-group row">
                            <div class="col-md-5">
                                @if (j == 0)
                                {
                                    <label class="control-label"><b>@Strings.FilterTypeLabel:</b></label>
                                    <div>
                                        <select @ref="firstSelect" class="grid-filter-type form-control" @bind="_filters[j].Type">
                                            <option value="1">@Strings.Equal</option>
                                            <option value="10">@Strings.NotEqual</option>
                                            <option value="5">@Strings.GreaterThan</option>
                                            <option value="6">@Strings.LessThan</option>
                                            <option value="7">@Strings.GreaterThanOrEquals</option>
                                            <option value="8">@Strings.LessThanOrEquals</option>
                                            @if (GridHeaderComponent.Column.Filter.IsNullable)
                                            {
                                                <option value="11">@Strings.IsNull</option>
                                                <option value="12">@Strings.IsNotNull</option>
                                            }
                                        </select>
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        <select class="grid-filter-type form-control" @bind="_filters[j].Type">
                                            <option value="1">@Strings.Equal</option>
                                            <option value="10">@Strings.NotEqual</option>
                                            <option value="5">@Strings.GreaterThan</option>
                                            <option value="6">@Strings.LessThan</option>
                                            <option value="7">@Strings.GreaterThanOrEquals</option>
                                            <option value="8">@Strings.LessThanOrEquals</option>
                                            @if (GridHeaderComponent.Column.Filter.IsNullable)
                                            {
                                                <option value="11">@Strings.IsNull</option>
                                                <option value="12">@Strings.IsNotNull</option>
                                            }
                                        </select>
                                    </div>
                                }
                            </div>
                            <div class="col-md-7">
                                @if (j == 0)
                                {
                                    <label class="control-label"><b>@Strings.FilterValueLabel:</b></label>
                                }
                                <div>
                                    @if (GridHeaderComponent.GridComponent._isWeekSupported)
                                    {
                                        <input type="week" placeholder="yyyy-Www" class="grid-filter-input form-control" value="@_filters[j].Value" @onchange="(ChangeEventArgs __e) => _filters[j].Value = __e.Value.ToString()" />
                                    }
                                    else
                                    {
                                        <input type="text" placeholder="yyyy-Www" class="grid-filter-input form-control" value="@_filters[j].Value" @onchange="(ChangeEventArgs __e) => _filters[j].Value = __e.Value.ToString()" />
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    <div class="form-group row" style="display:block;">
                        <div class="grid-filter-buttons" style="float:left;margin-left:15px;">
                            <button type="button" class="btn btn-primary" @onclick="ApplyButtonClicked">
                                @Strings.ApplyFilterButtonText
                            </button>
                        </div>
                        <div class="grid-filter-buttons" style="float:right;margin-right:15px;">
                            <button type="button" class="btn btn-primary" @onclick="() => AddColumnFilterValue()"><b>+</b></button>
                            @if (_filters.Length > 1)
                            {
                                <button type="button" class="btn btn-primary" style="margin-left:10px;" @onclick="() => RemoveColumnFilterValue()"><b>-</b></button>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="grid-popup-additional">
                @if (_clearVisible)
                {
                    <ul class="menu-list" style="margin-top:40px;">
                        <li>
                            <a class="grid-filter-clear" href="javascript:void(0);" @onclick="ClearButtonClicked">
                                @Strings.ClearFilterLabel
                            </a>
                        </li>
                    </ul>
                }
            </div>
        </div>
    </div>
}
