<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyFilterButtonText" xml:space="preserve">
    <value>Потвърди</value>
  </data>
  <data name="BoolFalseLabel" xml:space="preserve">
    <value>Не</value>
  </data>
  <data name="BoolTrueLabel" xml:space="preserve">
    <value>Да</value>
  </data>
  <data name="ClearFilterLabel" xml:space="preserve">
    <value>Изчисти филтър</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>Съдържа</value>
  </data>
  <data name="DefaultGridEmptyText" xml:space="preserve">
    <value>Няма данни</value>
  </data>
  <data name="EndsWith" xml:space="preserve">
    <value>Завършва с</value>
  </data>
  <data name="Equal" xml:space="preserve">
    <value>Равни</value>
  </data>
  <data name="FilterButtonTooltipText" xml:space="preserve">
    <value>Филтрирай колона</value>
  </data>
  <data name="FilterTypeLabel" xml:space="preserve">
    <value>Тип</value>
  </data>
  <data name="FilterValueLabel" xml:space="preserve">
    <value>Стойност</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>По-голямо от</value>
  </data>
  <data name="GreaterThanOrEquals" xml:space="preserve">
    <value>По-голямо или равно</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Елементи</value>
  </data>
  <data name="Lang" xml:space="preserve">
    <value>бг</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>По-малко</value>
  </data>
  <data name="LessThanOrEquals" xml:space="preserve">
    <value>По-малко или равно</value>
  </data>
  <data name="SearchFor" xml:space="preserve">
    <value>Търсене</value>
  </data>
  <data name="StartsWith" xml:space="preserve">
    <value>Започни с</value>
  </data>
  <data name="Average" xml:space="preserve">
    <value>Средно</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>Максимум</value>
  </data>
  <data name="Min" xml:space="preserve">
    <value>Минимум</value>
  </data>
  <data name="Sum" xml:space="preserve">
    <value>Виж</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>И</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>Или</value>
  </data>
  <data name="ExtSortingText" xml:space="preserve">
    <value>Премахнете колони тук за разширено сортиране на колони</value>
  </data>
  <data name="GroupingText" xml:space="preserve">
    <value>Плъзнете колони тук, за да групирате колони</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Добави</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Назад</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Изтриване</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактирай</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Запис</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>Преглед</value>
  </data>
  <data name="SelectItem" xml:space="preserve">
    <value>--- изберете елемент ---</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Покажи</value>
  </data>
  <data name="ClearAllFilters" xml:space="preserve">
    <value>Изчисти всички филтри</value>
  </data>
  <data name="CreateItem" xml:space="preserve">
    <value>Създай нов</value>
  </data>
  <data name="DeleteItem" xml:space="preserve">
    <value>Изтриване </value>
  </data>
  <data name="ReadItem" xml:space="preserve">
    <value>Прочети елемент</value>
  </data>
  <data name="UpdateItem" xml:space="preserve">
    <value>Актуализиране на елемента</value>
  </data>
  <data name="NotEqual" xml:space="preserve">
    <value>Различно</value>
  </data>
  <data name="CreateError" xml:space="preserve">
    <value>Има грешка при създаване на нов обект</value>
  </data>
  <data name="DeleteError" xml:space="preserve">
    <value>При изтриването на този елемент възникна грешка</value>
  </data>
  <data name="UpdateError" xml:space="preserve">
    <value>При актуализирането на този елемент възникна грешка</value>
  </data>
  <data name="IsNotNull" xml:space="preserve">
    <value>Не е нула</value>
  </data>
  <data name="IsNull" xml:space="preserve">
    <value>Нула е</value>
  </data>
  <data name="SelectionDeleteError" xml:space="preserve">
    <value>Трябва да изберете реда, който искате да изтриете</value>
  </data>
  <data name="SelectionReadError" xml:space="preserve">
    <value>Трябва да изберете реда, който искате да видите</value>
  </data>
  <data name="SelectionUpdateError" xml:space="preserve">
    <value>Трябва да изберете реда, който искате да редактирате</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Филтър</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Код</value>
  </data>
  <data name="Confirm Code" xml:space="preserve">
    <value>Код за потвърждание</value>
  </data>
  <data name="ConfirmCodeError" xml:space="preserve">
    <value>Кода и кода за потвърждение трябва да са равни за да запишете успешно</value>
  </data>
  <data name="DeleteConfirmCodeError" xml:space="preserve">
    <value>Кода и кода за потвърждение трябва да са равни за да изтриете успешно</value>
  </data>
  <data name="Goto" xml:space="preserve">
    <value>Отидете на</value>
  </data>
  <data name="SearchFilterListInputText" xml:space="preserve">
    <value>Фраза за търсене</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Bсичко</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Нито един</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Изберете</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Височина</value>
  </data>
  <data name="Duplicated" xml:space="preserve">
    <value>Дублиран</value>
  </data>
  <data name="NotDuplicated" xml:space="preserve">
    <value>Не се дублира</value>
  </data>
  <data name="current" xml:space="preserve">
    <value>текуща</value>
  </data>
  <data name="PageSizeItems" xml:space="preserve">
    <value>Елемента</value>
  </data>
</root>