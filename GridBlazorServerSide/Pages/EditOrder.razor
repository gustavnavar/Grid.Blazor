@page "/editorder/{OrderId}/{ReturnUrl}/{GridState}"
@page "/editorder/{OrderId}/{ReturnUrl}/{GridState}/{AltGridState}"
@using GridBlazorServerSide.Models
@using GridBlazorServerSide.Services
@inject IOrderService orderService
@inject NavigationManager NavigationManager

<h1>Edit page</h1>

<p>
    This page allows order edit and returns to the correct calling page including grid states.
</p>

<p>
    This component demonstrates a GridBlazor server-side grid. For more documentation, please see: <a href="https://github.com/gustavnavar/Grid.Blazor">https://github.com/gustavnavar/Grid.Blazor</a>
</p>

@if (_order == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@_order" OnValidSubmit="@UpdateOrder">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-horizontal">
            <div class="form-group">
                <label for="OrderID" class="control-label col-md-2">OrderID: </label>
                <div class="col-md-5">
                    <InputNumber id="OrderID" class="form-control" readonly="readonly" @bind-Value="_order.OrderID" />
                </div>
            </div>

            <div class="form-group">
                <label for="CompanyName" class="control-label col-md-2">Customer: </label>
                <div class="col-md-5">
                    <InputText id="CompanyName" class="form-control" readonly="readonly" @bind-Value="_order.Customer.CompanyName" />
                </div>
            </div>

            <div class="form-group">
                <label for="OrderDate" class="control-label col-md-2">Order Date: </label>
                <div class="col-md-5">
                    <InputDate id="OrderDate" class="form-control" @bind-Value="_order.OrderDate" />
                </div>
            </div>

            <div class="form-group">
                <label for="RequiredDate" class="control-label col-md-2">Required Date: </label>
                <div class="col-md-5">
                    <InputDate id="RequiredDate" class="form-control" @bind-Value="_order.RequiredDate" />
                </div>
            </div>

            <div class="form-group">
                <label for="ShippedDate" class="control-label col-md-2">Shipped Date: </label>
                <div class="col-md-5">
                    <InputDate id="ShippedDate" class="form-control" @bind-Value="_order.ShippedDate" />
                </div>
            </div>

            <div class="form-group">
                <label for="ShipName" class="control-label col-md-2">Ship Name: </label>
                <div class="col-md-5">
                    <InputText id="ShipName" class="form-control" @bind-Value="_order.ShipName" />
                </div>
            </div>

            <div class="form-group">
                <label for="ShipAddress" class="control-label col-md-2">Ship Address: </label>
                <div class="col-md-5">
                    <InputText id="ShipAddress" class="form-control" @bind-Value="_order.ShipAddress" />
                </div>
            </div>

            <div class="form-group">
                <label for="ShipCity" class="control-label col-md-2">Ship City: </label>
                <div class="col-md-5">
                    <InputText id="ShipCity" class="form-control" @bind-Value="_order.ShipCity" />
                </div>
            </div>

            <div class="form-group">
                <label for="ShipPostalCode" class="control-label col-md-2">Ship Postal Code: </label>
                <div class="col-md-5">
                    <InputText id="ShipPostalCode" class="form-control" @bind-Value="_order.ShipPostalCode" />
                </div>
            </div>

            <div class="form-group">
                <label for="ShipRegion" class="control-label col-md-2">Ship Region: </label>
                <div class="col-md-5">
                    <InputText id="ShipRegion" class="form-control" @bind-Value="_order.ShipRegion" />
                </div>
            </div>

            <div class="form-group">
                <label for="ShipCountry" class="control-label col-md-2">Ship Country: </label>
                <div class="col-md-5">
                    <InputText id="ShipCountry" class="form-control" @bind-Value="_order.ShipCountry" />
                </div>
            </div>

            <div class="form-group">
                <label for="Freight" class="control-label col-md-2">Freight: </label>
                <div class="col-md-5">
                    <input id="Freight" name="Freight" class="form-control" @bind="_order.Freight" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-5">
                    <input id="CustomerID" name="CustomerID" type="hidden" value="@_order.CustomerID" />
                    <input id="EmployeeID" name="EmployeeID" type="hidden" value="@_order.EmployeeID" />
                    <input id="ShipVia" name="ShipVia" type="hidden" value="@_order.ShipVia" />
                    <button type="submit" class="btn btn-primary btn-md">Save</button>
                    <button type="button" class="btn btn-primary btn-md" @onclick="Back">Back</button>
                </div>
            </div>
        </div>
    </EditForm>
}

@code
{
    private Order _order;

    [Parameter]
    public string OrderId { get; set; }

    [Parameter]
    public string ReturnUrl { get; set; }

    [Parameter]
    public string GridState { get; set; }

    [Parameter]
    public string AltGridState { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _order = await orderService.GetOrder(Convert.ToInt32(OrderId));
    }

    private async Task UpdateOrder()
    {
        await orderService.UpdateAndSave(_order);
        NavigationManager.NavigateTo($"/{ReturnUrl}/{GridState}/{AltGridState}");
    }

    private void Back()
    {
        NavigationManager.NavigateTo($"/{ReturnUrl}/{GridState}/{AltGridState}");
    }
}
