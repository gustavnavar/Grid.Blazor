@page "/keyboardnav"
@page "/keyboardnav/{GridState}"
@using GridBlazorClientSide.Client.ColumnCollections
@using GridBlazorClientSide.Shared.Models
@using Microsoft.Extensions.Primitives
@using System.Globalization
@using System.Threading.Tasks
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<h1>Keyboard Navigation</h1>

<p>
    This page contains a grid with keyboard navigation. Rows can also be selected. When a row is selected, the order details are shown in a component on rigth column.
</p>

<p>
    This component demonstrates a GridBlazor client-side grid. For more information, please see: <a href="https://github.com/gustavnavar/Grid.Blazor">https://github.com/gustavnavar/Grid.Blazor</a>
</p>

@if (_task.IsCompleted)
{
    <div class="row">
        <div class="col-md-9">
            <GridComponent T="Order" Grid="@_grid" OnRowClicked="@OrderDetails"></GridComponent>
        </div>
        <div class="col-md-3">
            <h4>
                Order details
            </h4>
            <OrderInfo @ref="_orderInfo" ReturnUrl="keyboardnav" Grid="@_grid"></OrderInfo>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}

@code
{
    private CGrid<Order> _grid;
    private OrderInfo _orderInfo;
    private Task _task;

    [Parameter]
    public string GridState { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var locale = CultureInfo.CurrentCulture;
        var query = new QueryDictionary<StringValues>();
        if (!string.IsNullOrWhiteSpace(GridState))
        {
            try
            {
                query = StringExtensions.GetQuery(GridState);
            }
            catch (Exception)
            {
                // do nothing, GridState was not a valid state
            }
        }
        string url = NavigationManager.BaseUri + "api/SampleData/GetOrdersGrid";
        var client = new GridClient<Order>
            (HttpClient, url, query, false, "ordersGrid", ColumnCollections.OrderColumns, locale)
            .Sortable()
            .Filterable()
            .SetKeyboard(true)
            .SetStriped(true)
            .Selectable(true, true)
            .WithMultipleFilters()
            .WithGridItemsCount();

        _grid = client.Grid;
        // Set new items to grid
        _task = client.UpdateGrid();
        await _task;
    }

    protected void OrderDetails(object item)
    {
        if (item.GetType() == typeof(Order))
        {
            _orderInfo.Order = (Order)item;
        }
        else
        {
            _orderInfo.Order = null;
        }
        _orderInfo.Refresh();
    }
}
